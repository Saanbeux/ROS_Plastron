
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR_LITERAL CLIENT COMMA CREATE_MSGS CREATE_NODE CREATE_NODELET DOT EMPTY EQUALS GENERATE_LAUNCH INT LEFT_P LOAD NAME NODE NODELET PUBLISH RIGHT_P SERVER SERVICE STRING_LITERAL SUBSCRIBE SUBSCRIBER UNSUBSCRIBE\n    def : NAME EQUALS STRING_LITERAL\n        | NAME EQUALS INT\n        | NAME EQUALS CHAR_LITERAL\n        | NAME EQUALS NAME\n        | NAME EQUALS func\n        | NAME EQUALS NAME DOT mod\n    \n    func  : prim_f paren\n    \n    var_mod  : NAME DOT mod\n    \n    mod  : prim_m paren\n    \n    prim_f  : CREATE_NODE\n            | CREATE_MSGS\n            | LOAD\n            | GENERATE_LAUNCH\n            | CREATE_NODELET\n    \n    exp : def\n        | func\n        | var_mod\n    \n    prim_m  : PUBLISH\n            | SUBSCRIBE\n            | UNSUBSCRIBE\n            | SERVICE\n            | CLIENT\n    \n    paren   : paren1\n            | paren2\n    \n    paren1  : LEFT_P NAME COMMA STRING_LITERAL RIGHT_P\n            | LEFT_P STRING_LITERAL COMMA communication RIGHT_P\n    \n    paren2  : LEFT_P STRING_LITERAL RIGHT_P\n            | LEFT_P EMPTY RIGHT_P\n    \n    communication   : SUBSCRIBER\n                    | SERVER\n    '
    
_lr_action_items = {'INT':([3,],[5,]),'SUBSCRIBER':([31,],[37,]),'CREATE_NODELET':([3,],[7,]),'CHAR_LITERAL':([3,],[8,]),'NAME':([0,3,18,],[2,11,22,]),'EQUALS':([2,],[3,]),'UNSUBSCRIBE':([19,],[28,]),'RIGHT_P':([20,21,35,36,37,38,],[30,32,-30,39,-29,40,]),'LEFT_P':([6,7,9,12,13,14,23,24,25,26,28,29,],[18,-14,-11,-12,-13,-10,-18,-21,-19,18,-20,-22,]),'STRING_LITERAL':([3,18,33,],[4,20,38,]),'SUBSCRIBE':([19,],[25,]),'$end':([1,4,5,8,10,11,15,16,17,27,30,32,34,39,40,],[0,-1,-2,-3,-5,-4,-24,-7,-23,-6,-27,-28,-9,-26,-25,]),'CREATE_MSGS':([3,],[9,]),'PUBLISH':([19,],[23,]),'GENERATE_LAUNCH':([3,],[13,]),'SERVER':([31,],[35,]),'CLIENT':([19,],[29,]),'SERVICE':([19,],[24,]),'LOAD':([3,],[12,]),'DOT':([11,],[19,]),'CREATE_NODE':([3,],[14,]),'COMMA':([20,22,],[31,33,]),'EMPTY':([18,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'paren2':([6,26,],[15,15,]),'prim_f':([3,],[6,]),'paren':([6,26,],[16,34,]),'communication':([31,],[36,]),'prim_m':([19,],[26,]),'mod':([19,],[27,]),'def':([0,],[1,]),'paren1':([6,26,],[17,17,]),'func':([3,],[10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> def","S'",1,None,None,None),
  ('def -> NAME EQUALS STRING_LITERAL','def',3,'p_def','ros_plastron_parser.py',11),
  ('def -> NAME EQUALS INT','def',3,'p_def','ros_plastron_parser.py',12),
  ('def -> NAME EQUALS CHAR_LITERAL','def',3,'p_def','ros_plastron_parser.py',13),
  ('def -> NAME EQUALS NAME','def',3,'p_def','ros_plastron_parser.py',14),
  ('def -> NAME EQUALS func','def',3,'p_def','ros_plastron_parser.py',15),
  ('def -> NAME EQUALS NAME DOT mod','def',5,'p_def','ros_plastron_parser.py',16),
  ('func -> prim_f paren','func',2,'p_func','ros_plastron_parser.py',22),
  ('var_mod -> NAME DOT mod','var_mod',3,'p_var_mod','ros_plastron_parser.py',28),
  ('mod -> prim_m paren','mod',2,'p_mod','ros_plastron_parser.py',34),
  ('prim_f -> CREATE_NODE','prim_f',1,'p_prim_f','ros_plastron_parser.py',40),
  ('prim_f -> CREATE_MSGS','prim_f',1,'p_prim_f','ros_plastron_parser.py',41),
  ('prim_f -> LOAD','prim_f',1,'p_prim_f','ros_plastron_parser.py',42),
  ('prim_f -> GENERATE_LAUNCH','prim_f',1,'p_prim_f','ros_plastron_parser.py',43),
  ('prim_f -> CREATE_NODELET','prim_f',1,'p_prim_f','ros_plastron_parser.py',44),
  ('exp -> def','exp',1,'p_exp','ros_plastron_parser.py',50),
  ('exp -> func','exp',1,'p_exp','ros_plastron_parser.py',51),
  ('exp -> var_mod','exp',1,'p_exp','ros_plastron_parser.py',52),
  ('prim_m -> PUBLISH','prim_m',1,'p_prim_m','ros_plastron_parser.py',58),
  ('prim_m -> SUBSCRIBE','prim_m',1,'p_prim_m','ros_plastron_parser.py',59),
  ('prim_m -> UNSUBSCRIBE','prim_m',1,'p_prim_m','ros_plastron_parser.py',60),
  ('prim_m -> SERVICE','prim_m',1,'p_prim_m','ros_plastron_parser.py',61),
  ('prim_m -> CLIENT','prim_m',1,'p_prim_m','ros_plastron_parser.py',62),
  ('paren -> paren1','paren',1,'p_paren','ros_plastron_parser.py',68),
  ('paren -> paren2','paren',1,'p_paren','ros_plastron_parser.py',69),
  ('paren1 -> LEFT_P NAME COMMA STRING_LITERAL RIGHT_P','paren1',5,'p_paren1','ros_plastron_parser.py',75),
  ('paren1 -> LEFT_P STRING_LITERAL COMMA communication RIGHT_P','paren1',5,'p_paren1','ros_plastron_parser.py',76),
  ('paren2 -> LEFT_P STRING_LITERAL RIGHT_P','paren2',3,'p_paren2','ros_plastron_parser.py',82),
  ('paren2 -> LEFT_P EMPTY RIGHT_P','paren2',3,'p_paren2','ros_plastron_parser.py',83),
  ('communication -> SUBSCRIBER','communication',1,'p_communication','ros_plastron_parser.py',89),
  ('communication -> SERVER','communication',1,'p_communication','ros_plastron_parser.py',90),
]
